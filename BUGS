-*- Text -*- 

NON CRITICAL BUGS LIST, needed for production 1.0.0
=======================================================================

* mwd must perform the statistic calc's. This will cause a task that
  will increase with an increase in the number of servers. To prevent
  thrashing by mwd, use /proc/stat cpu line to detect low idle time on
  system and suspend stats calcs. The fourth number gives the nummber
  of jiffies (1/100 sec) the the system has been in idle since
  boot. NB the idle numbver wraps around when uptime passes 2^32 /100
  secs.  (hey!  thats is only 1.4 years!!!!!). Actually worse, divide
  by number of cpu's.  see /usr/src/linux/fs/proc/array.c

(shutdown command, OK) * we need at all ends to handle disappearing
  message queues. (probably server only.)  mwd fixed

* mwadm don't detach ipc when issuing a shutdown command.

(watchdog made) * Propper clean up of kill -9 and core dumping servers.
  garbage collect in mwd.

* stats, *IDEA: the decay filter is applied when mwadm (or its likes)
  get the statinfo, and decays according to who long its been since
  the server updated it's stats.  thus the server at every completed
  service calls sets what's right.

* _mwrealloc() handles malloc() buffers, it shouldn't. (??)
  
* I question the way I get ipcmain info. I call _mw_ipcmaininfo() in
  every function where it's needed. I really should have a global var.
  (maybe a macro?)

* completion in mwadm is incomplete, works only on the command verb.
  Need to do port to readlin4 anyway. 

* the max number of times a request may be forwarded is hardcoded to
  100 in mwforward.  We should have a way to set a IP'ish TTL
  (TimeToLive).

(fixed)* mwlog used to print on stdout if loglevel >= debug, i liked that, I
  changed it for start of mwd thru mwadm, but I think I should just
  cut stdout and stderr for mwd.
  No, stderr kept. 

* shm buffer leaks has been pluggen for non fastpath. Test fast path
  and check that memory leaks are plugged when it comes to passing of
  buffers.

* in start_watch_dog we don't check for heap being attached. (It's a
  CANTHAPPEN anyway).

(fixed?) * shutdown servers on msgqueue remove, works, but services
  are not clean up.

(fixed) * mwlogsetprefix() should if not a absolute path arg, go to ipcmain
  and get mw_homedir, if that fail try MWHOME, and finally relate to
  cwd. (diff between relpath and no path prefix)
  mwlogsetprefix depreciated, use mwopenlog().  

* The shutdown command in mwadm don't indicate if successfull, and
  should detach IPC resources.

* SRBP imp don't support SVCDATA. (thus max datalen 3000 octets)
  * not in mwgwd
  * not in lib (C client)
  * not in Perl NetClient

* in the urlencode lib - when a empty value &name=& the = is required.

* testnet to mwbd and send TERM!, mwbd replies with TERM~ missing init
  before disconnecting

* mwbd fails with hang is another mwbd is already running

* in servermgr.c we include /usr/local/bin in default path since it's
  the default place for mwgwd that is started by
  servermanager. However it really should be @exec_prefix@ from
  autoconf.

-----------------------------------------------------------------------

Minor BUGS:
=======================================================================

* buffers shall be auto NULL terminated, thus the byte following the
  last char in a buffer shall be NULL no matter what. (just in case.).

* In ipcmessages.c, if we never picked up a message and it didn't have
  a timeout, the internal queue will grow and never be cleaned
  up. This can't be avoided. The alternative is to record the handle
  before sending the reply. However, on a failing server which never
  sends a reply, this too will grow and cause a memory leak. Since the
  latter is more likely, the former approach minimizes the leak.

* in mwadm R&D commands are available when not in R&D mode.

* mwadm boot should do a implicit mwattach. 

(fixed) * call in mwadm require an arg to the service, but no arg is OK.

* Outside lib's and mw programs SERVERID, CLIENTID and SERVICEID
  should have stripped the prefix, leaving only the "index" .

(FIXED) mwlog.c::switchlog() don't seem to work

* sigchld on mwd master is recorded but not used.

* in mwd/tables.c:stop_server() requests in the servers queue are not
  redistibuted.

* in mwadm the "clients" command print the internal int for type.
  Also missing client name

* Hmm, I can't do a msgctl( , IPC_STAT, ) on a queue "I" have write
  presmission on.  I belive this is a bug in Linux, fix it? (seems
  easy).  msgqueues are set apart from sem and shm in that it is
  prefectly OK to only have write permission to a queue, and thus I
  still should be able to stat it.  (update) Hmm, seems to be correct
  in the way it is, really causes a problem.  This breaks the
  selection algo of servers. If msgsnd() fails on one server, we will
  not be able to select another.

* update doc, autocleanup don't work on Linux if /proc don't exists.

(FIXED) mwcall() and friends didn't do proper sanity checks on params,
  notably if a buffer length was gives as 0, a null terminatted buffer
  is assumed, but length was passed as 0 to server, now strlen() is
  called in mw(a)call.

* the whole consept of an instance name has become iffy with regards
  to URL, and is effectively broken in mwd.
  We have effectively two instance names. a IPC symbolic, and an URL addr.

* in SRBclient we don't send rejects even id the gateway (peer) should
  request it.

* in SRBclient we don't perform all the test on a SVCCALL reply we
  should according to the RFC.

* in SRBclient:_mwfetch_srb: do test on expired deadline

REL: 0.10.0

(FIXED) * servers fail to start when mwd is started with -D,
  mwprovide() return ECONNABORTED: Cause wrong mwdpid in ipcmain.

(FIXED) * mwcall fails if NULL as data.

(FIXED) * mwcall return 0 on success, not MWSUCCESS (=1)
	Actually, it shall return 0 on success, -1 on fail and 1 
	if more replies are pending

REL: 0.10.1

* segfault in mwgwd on ^C without core dump...

* memleak in mwbd

* memleak in mwd

REL 0.11.0

(FIXED) * multicast is sent to localhost only


-----------------------------------------------------------------------

CRITICAL BUGS:
=======================================================================

FIXED (tested?) * mwreply can be called several times and they all
  send replys.

FIXED * handling of accidental deletion of shm segments. On HP-UX key
  is set to IPC_PRIVATE (0) on shmctl(IPC_RMID). On Linux, attempting
  to attach a segment marked destroyed. results in EIDRM.  Posix.4
  (1003.1b) handles deletion with shm_unlink() which works like
  unlink.  THe Inode isn't deleted until the last process closes it.
  Thus on this edition of sysVIPC on linux is wrong. Made fix to
  kernel, sendt to Linus.

(FIXED?) * there is something so wrong in mwfetch after mwd and
  mwservers are down and I'm ^C mwadm.

(GONE?) * ^C doesn't work in normal mode. May be a problem with the
  previous problem.  INT and QUIT is caught in mwadm. I doubt
  interrupt handling is OK in mwadm.  (can't really reproduce this
  one.)

(FIXED, thru -D or mwadm) * mwd should go into daemon state after
  boot.

(PARTIAL) * mwd need to accept a shutdown command somehow.

(FIXED) * mwadm need shutdown and boot commands.

* requests on the queue to a server is junked on mwdetach(), they
  should be redirected to another server if available, or returned
  with failure to client.  (only if the server only in shutdown down,
  if the entire instance is going down, ignor it.)

* if making a dummy server that replies many times, calling it a few 
  times causes a core dump in malloc(), somewhere we overwrite a 
  malloced buffer. It dissapears when MALLOC_DEBUG_ env is set!
  (Really anoying, have to try efence.).

(fixed) * gwtbl goes full, no info on gwtable in mwadm

(fixed) * mwgwd don't reconnect broker

