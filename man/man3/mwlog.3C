.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1999 Terje Eggestad <terje.eggestad@iname.com>
.\" May be distributed under the GNU General Public License.
.\" $Id$
.\" $Name$
.\"
.TH MWLOG 3  DATE "MidWay 1.0" "MidWay Programmer's Manual"
.SH NAME
mwlog, mwopenlog, mwloglevel, mwlogprefix \- MidWay logging facility
.SH SYNOPSIS
.B #include <MidWay.h>
.sp
.BI "void mwlog(int level, char * fmt, ...);"
.sp
.BI "int mwsetloglevel(int level);"
.br
.BI "void mwopenlog(char * progname, chat * fileprefix, int level);"
.br
.BI "void mwlogprefix(char * fileprefix); // depreciated"
.SH DESCRIPTION
These calls constitute the logging facility in MidWay. This facility
are used in MidWay code and is provided here to give programmers a
unified program log.  There are nothing that prevent a programmer to
use stdout and stderr, but be aware that if
.I level
is set to MWLOG_DEBUG or above, logging is performed to stderr as well
as the log file.  After the
.I level  
argument to
.BR mwlog ()
it behaves just like 
.BR printf (3)
with one exception, an newline is automatically added. As syslog each
entry made by 
.BR mwlog () 
in the logfile is prefixed by a time stamp, the calling pid, and
loglevel.
.PP
.BR mwopenlog ()
This is the recommended way to open a logfile. fileprefix is passed to
.BR  mwlogprefix ()
internally, and 
.B level 
is passed to 
.BR mwsetloglevel ().
.PP
.BR mwsetloglevel ()
is used to set what level of log messages to ignore and what to write
to log file we set level with
.BR mwsetloglevel ().
All logging above this loglevel is ignored. If loglevel is MWLOG_DEBUG
or above, logging goes to stderr as well as the log file.
.PP
.BR  mwlogprefix ()
is used to det the logfile.  However, there is a default logfile.  The
default log fileprefix is
.BI mwhome / instance /log/ progname 
and is set when fileprefix is NULL.  mwhome is attemped fetched from
the environmant MWHOME and instance name from the environment var
MWINSTANCE. If their're not set, and the application is attached with
IPC, mwhome and instance name is fetched from
.IR mwd (1). 
If no progname is set with 
.BR mwopenlog (3)
then there is no default logprefix, and logging  is silently ignored. 
When 
.I fileprefix 
is not null, then it's attemped to break up into dirname and basename
parts.  The basename part replaces progname in the file prefix. If
there is a dirname part, and it's absolute, it replaces the entire
dirpath mwhome/instance/log.  If it's a relative path, it relates to
CWD. The date suffix
.I .YYYYMMDD 
is alway added to the  logfileprefix and the filename is automatically
switched after midnight.

Note that progname is limited to 8 chars. If NULL, mwlog() will not
insert blanks in the logentries.

.br
The 
.I level
parameter is similar to that of 
.BR syslog (3)
that it indicate severity of the entry.. 

.TP
.B MWLOG_DEBUG4
Reserved for differentiate logging done in MidWay code on DEBUG3
.TP
.B MWLOG_DEBUG3
A rather extreme level of debugging, and will produce a vast number of
logging from MidWay code.  Normally only used for developing and
debugging MidWay code.
.TP
.B MWLOG_DEBUG2
Reserved for programmers to give excessive logging without being out
drowned by logging from MidWay code.
.TP
.B MWLOG_DEBUG1
Some debugging from MidWay code, more meant to be helpful for
programmers to see when execution swaps between their own code and
MidWays.
.TP
.B MWLOG_DEBUG
Reserved for programmers to have a debugging facility without any
debugging from MidWay code.
.TP
.B MWLOG_INFO
The default log level, which is meant to give enough to be able to go
back and see when servers started and stopped, when services were
provided, and unprovided, when network connections where established
and disconnected.
.TP
.B MWLOG_ALERT
Warning messages that indicate that some action are needed in order to
prevent loss of service.
.TP
.B MWLOG_WARNING
Warning messages that will indicate conditions that will not cause
loss of service, but threatens.
.TP
.B MWLOG_ERROR
Out right errors. 
.PP
.TP
.B MWLOG_FATAL
Critical errors that will cause an abort/shutdown.
.PP
.SH WARNINGS
mwlog() do not close the logfile between to writes, thus all processes
using this logfile have it open for writing. Attempting to remove the
logfile by rm will only unlink it, but not remove the inode. (Common
problem). Check it with lsof or fuser before removing.  

.SH ENVIRONMENT
.TP
.B MWHOME
The home directory for MidWay run time. See 
.BR MidWay (7)
for directory tree. 
It's is set by 
.BR mwd (1) 
for all servers. 
.TP
.B MWLOGLEVEL
This will override the loglevel given to 
.BR mwopenlog "() or" mwsetloglevel "()."
This allows a user to override the loglevel at runtime. The value can
either be the named level or an integer indicating the level.
.TP
.B MWLOGPREFIX
This will override the log prefix given to 
.BR mwopenlog "() or" mwsetlogprefix "()."
This allows a user to override the logfileprefix at runtime. 
.TP
.B MWLOG_STDERR
If it has the value 0 or no value no logging will be done to stderr,
any other value (recommended 1) will duplicate logging to stderr, no
matter the loglevel.


.TP
.B MWINSTANCE
The instance name for the MidWay instance. See 
.BR MidWay (7)
for directory tree. 
It's is set by 
.BR mwd (1) 
for all servers. 
.PP

.SH EXAMPLES
.TP
mwopenlog(argv[0], "userlog", MWLOG_DEBUG); 
sets arg 0 as the progname, and open
/mwhome/instance/log/userlog.YYYYMMDD as the logfile, with logging up
to DEBUG level.
.TP
mwopenlog("Gollum", NULL, MWLOG_INFO); 
sets "Gollum" as the progname, and open
/mwhome/instance/log/userlog.YYYYMMDD as the logfile, with logging up
to info level.
.TP
mwopenlog("Gollum", "/tmp", MWLOG_INFO); 
sets "Gollum" as the progname, and open
/tmp/Gollum.YYYYMMDD as the logfile, with logging up
to info level.
.TP
mwopenlog("Gollum", "./gollum", MWLOG_INFO); 
sets "Gollum" as the progname, and open
./gollum.YYYYMMDD as the logfile, with logging up
to info level.
.PP

.SH BUGS 
Even if mwlog() flushes the log on every write, there are no file
locking, and corruption of the logfile
.I may 
occur.
.br
If you use a relative or absolute path in mwloprefix(), and we
fail to open the file, we silently drop all logging.

.SH "SEE ALSO"

.BR MidWay "(7), " mwd (1)

.SH STANDARDS
